{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authenticate.service.ts","webpack:///./src/app/draw-level/draw-level.component.css","webpack:///./src/app/draw-level/draw-level.component.html","webpack:///./src/app/draw-level/draw-level.component.ts","webpack:///./src/app/login-page/login-page.component.css","webpack:///./src/app/login-page/login-page.component.html","webpack:///./src/app/login-page/login-page.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/main-menu/about-button/about-button.component.css","webpack:///./src/app/main-menu/about-button/about-button.component.html","webpack:///./src/app/main-menu/about-button/about-button.component.ts","webpack:///./src/app/main-menu/contact-button/contact-button.component.css","webpack:///./src/app/main-menu/contact-button/contact-button.component.html","webpack:///./src/app/main-menu/contact-button/contact-button.component.ts","webpack:///./src/app/main-menu/level-edit-button/level-edit-button.component.css","webpack:///./src/app/main-menu/level-edit-button/level-edit-button.component.html","webpack:///./src/app/main-menu/level-edit-button/level-edit-button.component.ts","webpack:///./src/app/main-menu/main-menu.component.css","webpack:///./src/app/main-menu/main-menu.component.html","webpack:///./src/app/main-menu/main-menu.component.ts","webpack:///./src/app/mochi-face/mochi-face.component.css","webpack:///./src/app/mochi-face/mochi-face.component.html","webpack:///./src/app/mochi-face/mochi-face.component.ts","webpack:///./src/app/perform-login.service.ts","webpack:///./src/app/show-login.service.ts","webpack:///./src/app/show-logout.service.ts","webpack:///./src/app/sign-up-service.service.ts","webpack:///./src/app/sign-up/sign-up-complete/sign-up-complete.component.css","webpack:///./src/app/sign-up/sign-up-complete/sign-up-complete.component.html","webpack:///./src/app/sign-up/sign-up-complete/sign-up-complete.component.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/user-info.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".aboutBody{\\r\\n    background-color: lightblue;\\r\\n  }\"","module.exports = \"<div class=\\\"aboutBody\\\">\\n    <h2> you are currently viewing this on a dev server! </h2>\\n  <p>This a portfolio project still in development</p>\\n    <p> MochiJump is a personal project designed by Andrew Lenoir.</p>\\n    <p> It is broken into multiple parts </p>\\n    <p></p>\\n    <p> The game, MochiJump is a stand alone Desktop App that functions as a 2D 8 bit style platformer game. It is written in Java</p>\\n    <p> The web app, MochiJumpLevelEditor has a seperate front and back end</p> \\n    <p> The web front end is an Angular web app to be hosted on Google Cloud's App Engine </p>\\n    <p>The backend is written in Java and uses the Spring Framework along with a MySQL server. <p>\\n    <p>The back end is further broken broken into microservices making use of both Google Cloud's Compute Engine as well as AWS</p>\\n    <p style= \\\"padding-left: 30pt\\\">\\tCheck out the Desktop App source code\\n      <a href=\\\"https://github.com/AndoryuRenoa/MochiJump\\\">here</a>\\n      </p>\\n    <p style= \\\"padding-left: 30pt\\\">Direct link to Download MochiJump Desktop App \\n      <a href =\\\"https://github.com/AndoryuRenoa/MochiJump/blob/master/dist/MochiJump.jar?raw=true\\\">here</a>\\n      </p>\\n    <p style= \\\"padding-left: 30pt\\\">\\tCheck out the Web App source code\\n      <a href=\\\"https://github.com/AndoryuRenoa/MochiJumpLevelEditor\\\">here</a>\\n      </p>\\n  \\n  <a [routerLink]=\\\"['/']\\\">\\n  <button> Go Back </button>\\n  </a>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".tempMessage{\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<body>\\n  <div *ngIf =\\\"showAppLogin;\\\"><app-login></app-login></div>\\n  <div *ngIf =\\\"showAppLogout;\\\"><app-logout></app-logout> </div>\\n  <div class = 'tempMessage'>\\n  <p>This is a stable development build. This is still under Construction</p>\\n</div>\\n  <router-outlet></router-outlet>\\n  <nav>\\n  </nav>\\n  \\n  </body>\"","import { Component } from '@angular/core';\nimport {ShowLoginService} from './show-login.service';\nimport {ShowLogoutService} from './show-logout.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mj-web-front-end';\n  showAppLogin : boolean;\n  showAppLogout: boolean;\n\n\n\n  constructor(private showLoginService: ShowLoginService, private showLogout: ShowLogoutService){\n\n  }\n\n  ngOnInit(){\n    this.showLoginService.getStatus().subscribe(showAppLogin => this.showAppLogin = showAppLogin);\n    this.showLoginService.changeShowStatus(true);\n    this.showLogout.getStatus().subscribe(showAppLogout => this.showAppLogout = showAppLogout);\n    this.showLogout.changeShowStatus(false);\n  }\n\n\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RxReactiveFormsModule } from \"@rxweb/reactive-form-validators\"\n\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\nimport { DrawLevelComponent } from './draw-level/draw-level.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { MochiFaceComponent } from './mochi-face/mochi-face.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AboutButtonComponent } from './main-menu/about-button/about-button.component';\nimport { LevelEditButtonComponent } from './main-menu/level-edit-button/level-edit-button.component';\nimport { SignUpCompleteComponent } from './sign-up/sign-up-complete/sign-up-complete.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { ContactButtonComponent } from './main-menu/contact-button/contact-button.component';\n\n\nconst appRoutes: Routes = [\n  {path: 'about', component: AboutComponent },\n  {path: 'mainmenu', component: MainMenuComponent},\n  {path: 'levelEditor', component: DrawLevelComponent},\n  {path: 'signUp', component: SignUpComponent},\n  {path: 'signUpComplete', component:SignUpCompleteComponent},\n  {path: 'login', component: LoginPageComponent},\n  {path: 'levelEditor', component: DrawLevelComponent},\n  {path: '',   redirectTo: '/mainmenu', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    DrawLevelComponent,\n    LoginComponent,\n    LogoutComponent,\n    MainMenuComponent,\n    MochiFaceComponent,\n    SignUpComponent,\n    AboutButtonComponent,\n    LevelEditButtonComponent,\n    SignUpCompleteComponent,\n    LoginPageComponent,\n    ContactButtonComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    ReactiveFormsModule,FormsModule,\n    HttpClientModule,\n    RxReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {ShowLoginService} from './show-login.service';\nimport {ShowLogoutService} from './show-logout.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n   private userFirstName: string;\n\n  authenticated = false;\n\n  constructor(private http: HttpClient, private showLoginService: ShowLoginService, private showLogout: ShowLogoutService ) {\n  }\n\n  authenticate(credentials, callback) {\n\n        const headers = new HttpHeaders(credentials ? {\n            authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password), \n        } : {});\n\n        \n\n        this.http.get('/test/user', {headers: headers, responseType: 'text' as 'text'}).subscribe(response => {\n                this.userFirstName = response; \n                this.showLoginService.changeShowStatus(false);\n                this.showLogout.changeShowStatus(true);\n                console.log(\"Welcome \"+ response);\n            if (response.length>0) {\n                this.authenticated = true;    \n            } else {\n                this.authenticated = false;\n            }\n            return callback && callback();\n        });\n\n    }\n\n    getUserName(){\n        return this.userFirstName\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<p> The link below will take you to an old working prototype for the level editor for Mochi Jump</p>\\n\\n<a href = \\\"/test\\\"> \\n<h2> Old Working Prototype for Mochi Jump Level Editor</h2>\\n</a>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-draw-level',\n  templateUrl: './draw-level.component.html',\n  styleUrls: ['./draw-level.component.css']\n})\nexport class DrawLevelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = 'loginBody'>\\n\\n  <h2> You have been brought here as it is neccessary to login to access further content</h2>\\n  <form #loginForm= \\\"ngForm\\\" (ngSubmit)=\\\"attemptLogin(username.value, password.value)\\\">\\n    \\n    User Name: <input #username (keyup.enter)=\\\"attemptLogin(username.value, password.value)\\\" name=\\\"username\\\"\\n    [(ngModel)] =\\\"credentials.username\\\"><p></p>\\n    Password: <input  #password (keyup.enter)=\\\"attemptLogin(username.value, password.value)\\\" name=\\\"password\\\"\\n    [(ngModel)] =\\\"credentials.password\\\" type=\\\"password\\\">\\n  &nbsp;&nbsp;&nbsp;\\n  <button type = \\\"submit\\\" class =\\\"loginButton\\\">&nbsp;Login&nbsp;</button>\\n  </form>\\n  <p></p>\\n  <a  (click) = hideMe(); [routerLink] = \\\"['/signUp']\\\">\\n    <button class=\\\"signUpButton\\\"> Sign Up </button>\\n    </a>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {ShowLoginService} from '../show-login.service';\nimport {PerformLoginService} from '../perform-login.service';\nimport {AuthenticateService} from'../authenticate.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  credentials = {username: '', password: ''};\n\n\n  constructor(private showLoginService: ShowLoginService,\n     private peformLogin : PerformLoginService, private authenticate: AuthenticateService,\n     private router : Router ) { }\n\n  ngOnInit() {\n    \n  }\n\n  hideMe(){\n    this.showLoginService.changeShowStatus(false);\n  }\n\n  attemptLogin(username : string, password: string){\n    this.authenticate.authenticate(this.credentials, ()=>{\n      this.router.navigateByUrl('/');\n        });\n        return false;\n  }\n\n  doNothing(){\n\n  }\n\n}","module.exports = \".loginBody{\\r\\n  position: relative;\\r\\n background-color :darkslategray;\\r\\n overflow: hidden;\\r\\n \\r\\n}\\r\\n.loginWrapper{\\r\\n  margin-right: auto;\\r\\n  float: right;\\r\\n}\\r\\n.loginForm{\\r\\n margin:0px;\\r\\n color:white;\\r\\n text-align: right;\\r\\n display: inline-flex;\\r\\n \\r\\n}\\r\\n.loginButton{\\r\\n padding: 5px;\\r\\n}\\r\\n.signUpButton{\\r\\n padding: 5px;\\r\\n}\\r\\n\"","module.exports = \"\\n<div class = 'loginBody'>\\n  <div class= 'loginWrapper'>\\n  <div class= 'loginForm'>\\n      <a  (click) = \\\"hideMe()\\\" [routerLink] = \\\"['/signUp']\\\">\\n        <button class=\\\"signUpButton\\\" (keydown.enter) = \\\"doNothing()\\\"> Sign Up </button>\\n        </a>\\n    <form #loginForm= \\\"ngForm\\\" (ngSubmit)=\\\"attemptLogin(username.value, password.value)\\\">\\n    User Name: <input #username (keyup.enter)=\\\"attemptLogin(username.value, password.value)\\\" name=\\\"username\\\"\\n    [(ngModel)] =\\\"credentials.username\\\">\\n    Password: <input  #password (keyup.enter)=\\\"attemptLogin(username.value, password.value)\\\" name=\\\"password\\\"\\n    [(ngModel)] =\\\"credentials.password\\\" type=\\\"password\\\">\\n  &nbsp;&nbsp;&nbsp;\\n  <button type = \\\"submit\\\" class =\\\"loginButton\\\" >&nbsp;Login&nbsp;</button>\\n    </form>\\n    </div>\\n  </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {ShowLoginService} from '../show-login.service';\nimport {ShowLogoutService} from '../show-logout.service';\nimport {PerformLoginService} from '../perform-login.service';\nimport {AuthenticateService} from'../authenticate.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  credentials = {username: '', password: ''};\n\n\n  constructor(private showLoginService: ShowLoginService,\n     private peformLogin : PerformLoginService, private authenticate: AuthenticateService,\n     private router : Router, private showLogout: ShowLogoutService  ) { }\n\n  ngOnInit() {\n    \n  }\n\n  hideMe(){\n    this.showLoginService.changeShowStatus(false);\n  }\n\n  attemptLogin(username : string, password: string){\n    this.authenticate.authenticate(this.credentials, response=>{\n      console.log(\"Welcome \"+ response+\" from login component\");\n      this.showLoginService.changeShowStatus(false);\n      this.showLogout.changeShowStatus(true);\n      this.router.navigateByUrl('/');\n\n        });\n        return false;\n  }\n\n  doNothing(){\n\n  }\n\n}","module.exports = \".loginBody{\\r\\n    position: relative;\\r\\n   margin:0px;\\r\\n   background-color :darkslategray;\\r\\n   overflow: hidden;\\r\\n }\\r\\n .loginForm{\\r\\n   margin:0px;\\r\\n   color:white;\\r\\n   text-align: center;\\r\\n }\\r\\n .logoutButton{\\r\\n   float: right;\\r\\n }\"","module.exports = \"<div class = 'loginBody'>\\n  <form class= 'loginForm'>\\n    Welcome {{userName}}\\n  <button class=\\\"logoutButton\\\" (click)=\\\"logUserOut()\\\">Logout</button>\\n  </form>\\n  \\n  </div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\n\nimport {ShowLoginService} from '../show-login.service';\nimport {ShowLogoutService} from '../show-logout.service';\nimport {UserInfoService} from '../user-info.service';\nimport {AuthenticateService} from'../authenticate.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit, AfterViewInit {\n  userName = \"New User\";\n\n constructor(private showLoginService: ShowLoginService, private showLogout: ShowLogoutService,\n private auth : AuthenticateService) { }\n\n  ngOnInit() {\n    this.userName = this.auth.getUserName();\n    console.log(\"Logout Component onInit \"+this.userName);\n  }\n  ngAfterViewInit(){\n    this.userName = this.auth.getUserName();\n    console.log(\"Logout Component AfterViewInit \"+this.userName);\n  }\n\n  logUserOut(){\n    this.showLogout.changeShowStatus(false);\n    this.showLoginService.changeShowStatus(true);\n\n  }\n\n}","module.exports = \".container1{\\t\\r\\n    position: relative;\\r\\n\\t  width: 100%;\\r\\n\\t  display: inline-flex;\\r\\n\\t  flex-direction: row;\\r\\n\\t  align-items: center;\\r\\n\\t}\\r\\n\\t.option1{\\r\\n\\r\\n\\t}\\r\\n\\t.selectorimg1{\\r\\n\\tfloat: right;\\r\\n\\r\\n\\t}\\r\\n\\t.selector1, .right1{\\r\\n\\t  flex: 1;\\r\\n\\t}\"","module.exports = \"<div class =\\\"container1\\\" >\\n  <div class=\\\"selector1\\\" id=\\\"selector1\\\"> \\n    <div class= \\\"selectorimg1\\\" id=\\\"selectorimg1\\\" ></div>\\n  </div>\\n  <div class=\\\"option1\\\" id=\\\"option1\\\">\\n    <a [routerLink]=\\\"['/about']\\\">\\n    <img  src = \\\"/images/about.png\\\" style=\\\"float: right;\\\">\\n    </a>\\n  </div>\\n  <div class = \\\"right1\\\"> \\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-button',\n  templateUrl: './about-button.component.html',\n  styleUrls: ['./about-button.component.css'],\n  animations: [\n  ]\n})\n\nexport class AboutButtonComponent implements OnInit {\n  state: string = 'none';\n  isEnter: boolean =false;\n  private counter: number = 1;\n\n  constructor() {\n   \n   }\n\n   ngOnInit(){\n\n   }\n  }\n","module.exports = \"\"","module.exports = \"\\n<div class =\\\"container1\\\" >\\n  <div class=\\\"selector1\\\" id=\\\"selector1\\\">\\n    <div class= \\\"selectorimg1\\\" id=\\\"selectorimg1\\\" > </div>\\n  </div>\\n  <div class=\\\"option1\\\" id=\\\"option1\\\">\\n    <a [routerLink]=\\\"['/levelEditor']\\\">\\n    <img  src = \\\"/images/contact.png\\\" style=\\\"float: right;\\\">\\n    </a>\\n  </div>\\n  <div class = \\\"right1\\\"> \\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-button',\n  templateUrl: './contact-button.component.html',\n  styleUrls: ['./contact-button.component.css']\n})\nexport class ContactButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container1{\\t\\r\\n    position: relative;\\r\\n\\t  width: 100%;\\r\\n\\t  display: flex;\\r\\n\\t  flex-direction: row;\\r\\n    justify-content: center;\\r\\n\\t}\\r\\n\\t.option1{\\r\\n   \\r\\n\\r\\n\\t}\\r\\n\\t.selectorimg1{\\r\\n\\tfloat: right;\\r\\n\\r\\n\\t}\\r\\n\\t.selector1, .right1{\\r\\n\\t  flex: 1;\\r\\n\\t}\"","module.exports = \"\\n<div class =\\\"container1\\\" >\\n  <div class=\\\"selector1\\\" id=\\\"selector1\\\">\\n    <div class= \\\"selectorimg1\\\" id=\\\"selectorimg1\\\" > </div>\\n  </div>\\n  <div class=\\\"option1\\\" id=\\\"option1\\\">\\n    <a [routerLink]=\\\"['/levelEditor']\\\">\\n    <img  src = \\\"/images/lvledit.png\\\" style=\\\"float: right;\\\">\\n    </a>\\n  </div>\\n  <div class = \\\"right1\\\"> \\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-level-edit-button',\n  templateUrl: './level-edit-button.component.html',\n  styleUrls: ['./level-edit-button.component.css']\n})\nexport class LevelEditButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-mochi-face></app-mochi-face>\\n<app-level-edit-button></app-level-edit-button>\\n<app-about-button></app-about-button>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.css']\n})\nexport class MainMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\"","module.exports = \"\\n<img src=\\\"images/background.png\\\">\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mochi-face',\n  templateUrl: './mochi-face.component.html',\n  styleUrls: ['./mochi-face.component.css']\n})\nexport class MochiFaceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Http, Headers} from '@angular/http';\n\nexport interface LoginInfo {\n  username : string;\n  password : string;\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PerformLoginService {\n\n  loginURL = \"/login\";\n\n  constructor(private http : HttpClient) { }\n\n\n\n  postLogin(username : string, password : string){\n   let headers = new HttpHeaders ({\n      'Authorization': 'basic' +{username: username, password : password}, \n      'X-Requested-With': 'application/x-www-form-urlencoded'\n    });\n\n    let options =  {\n      headers:headers\n\n    };\n\n    console.log(\"Hello!!!\");\n    console.log({username: username, password : password});\n    console.log(this.loginURL, {username: username, password : password}, options);\n\n    return this.http.post(this.loginURL, options).subscribe((res) =>\n    console.log(JSON.stringify(res)));\n\n  }\n  \n \n /*\n  let creds = btoa(username+\":\"+password);\n  let basicHeader = \"Basic \"+ creds;\n  let headers = new Headers ({\n    'Content-Type' : 'application/x-www-form-urlencoded',\n    'Authorization' : basicHeader\n});\n\n  return this.http.post(this.loginURL, {headers: headers}).subscribe((res) => console.log(res));\n\n\n  }\n  */\n}\n","import { Injectable } from '@angular/core';\nimport {Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowLoginService {\n\n  private show = new Subject<boolean>();\n\n  constructor() { \n\n  }\n\n  getStatus(){\n    return this.show.asObservable();\n  }\n\n  changeShowStatus( showAppLogin: boolean){\n    this.show.next(showAppLogin);\n\n  }\n\n\n}","import { Injectable } from '@angular/core';\nimport {Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowLogoutService {\n  private show = new Subject<boolean>();\n\n  constructor() { \n\n  }\n\n  getStatus(){\n    return this.show.asObservable();\n  }\n\n  changeShowStatus( showAppLogout: boolean){\n    this.show.next(showAppLogout);\n\n  }\n\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Subject } from \"rxjs\";\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignUpServiceService {\n  signupURL = \"/test/newUserCreation\"\n  private nameTaken = new Subject<boolean>();\n\n\n\n  constructor(private http : HttpClient, private router: Router) { }\n\n  attemptSignUP(userTemplate, callback){\n\n    this.http.post(this.signupURL, userTemplate, {headers: new HttpHeaders(), responseType: 'text' as 'text'})\n    .subscribe((res) =>{\n    console.log(JSON.stringify(res));\n    if (res == \"Name Taken\"){\n      this.setNameTaken(true);\n    } else{\n      this.router.navigate(['/signUpComplete']);\n    }\n    });\n\n    return callback && callback();\n\n  }\n\n  setNameTaken (isNameTaken: boolean){\n    this.nameTaken.next(isNameTaken);\n  }\n\n  getNameTaken(){\n    return this.nameTaken.asObservable();\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"thisBody\\\">\\n  <a [routerLink] = \\\"['/']\\\">\\n  <h2> Click here to go back to main menu </h2>\\n  </a>\\n  \\n  <p>\\n  You've been sent an email with an activation link. Please follow that link to activate your account.\\n  </p>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sign-up-complete',\n  templateUrl: './sign-up-complete.component.html',\n  styleUrls: ['./sign-up-complete.component.css']\n})\nexport class SignUpCompleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".thisBody{\\r\\n    padding-left: 10px;\\r\\n  }\\r\\n\\r\\n.redError{\\r\\n  color: red;\\r\\n}\"","module.exports = \"<div class = thisBody>\\n  <a [routerLink] = \\\"['/']\\\">\\n  <h2> [Click here to go back to main menu] </h2>\\n  </a>\\n  <p>\\n  This will be the signup page. Currently being tested\\n  \\n  <form #loginForm= \\\"ngForm\\\" (ngSubmit)=\\\"signup()\\\" [formGroup]=\\\"registerForm\\\">\\n    Enter your first name here:&nbsp;&nbsp;<p></p>\\n      <div *ngIf=\\\"submitted && f.userFirstName.errors?.required\\\" class=\\\"redError\\\">**Please Provide Your First Name**</div>\\n        <input  type=\\\"text\\\" formControlName=\\\"userFirstName\\\" class=\\\"form-control\\\">  \\n          <p></p>\\n    Enter your user name here:&nbsp;&nbsp;<p></p>\\n      <div *ngIf=\\\"submitted && f.userName.errors?.required\\\" class=\\\"redError\\\">**Please Provide a User Name**</div>\\n      <div *ngIf=\\\"submitted && nameTaken\\\" class=\\\"redError\\\">**This user name is already taken, please select a new one**</div>\\n        <input type= \\\"text\\\" formControlName=\\\"userName\\\" class=\\\"form-control\\\">\\n          <p></p>\\n          <!-- stopped here-->\\n    Enter your Email here:&nbsp;&nbsp;<p></p>\\n      <div *ngIf=\\\"submitted && f.emailAddress.errors?.required\\\" class=\\\"redError\\\">**Please Provide Your Email Address**</div>\\n      <div *ngIf=\\\"submitted && f.emailAddress.errors?.email\\\" class=\\\"redError\\\">**Email address must be valid**</div>\\n        <input type=\\\"text\\\" formControlName=\\\"emailAddress\\\" class=\\\"form-control\\\">\\n          <p></p>\\n    Enter your password here:&nbsp;&nbsp;<p></p>\\n      <div *ngIf=\\\"submitted && f.password.errors?.required\\\" class=\\\"redError\\\">**Please Provide a Password**</div>\\n      <div *ngIf=\\\"submitted && f.password.errors?.required\\\" class=\\\"redError\\\">**Password must be 5 or more characters**</div>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\n          <p></p>\\n    Re-Enter your password here:&nbsp;&nbsp;<p></p>\\n      <div *ngIf=\\\"submitted && f.password2.errors\\\" class=\\\"redError\\\">**Passwords must match**</div>\\n      <input type=\\\"password\\\" formControlName=\\\"password2\\\" class=\\\"form-control\\\">\\n      \\n           &nbsp;\\n            <button type=\\\"submit\\\"> Sign me Up! </button>\\n  </form>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {ShowLoginService} from '../show-login.service';\nimport {ShowLogoutService} from '../show-logout.service';\nimport { UserInfoService } from '../user-info.service';\nimport { Router } from '@angular/router';\nimport {SignUpServiceService} from '../sign-up-service.service'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RxwebValidators,RxFormBuilder } from \"@rxweb/reactive-form-validators\"\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit, OnDestroy{\n  registerForm: FormGroup;\n  submitted :boolean = false;\n  passwordNotSame :boolean = true;\n  nameTaken: boolean = false;\n\n  newUserTemplate = {userFirstName: '', userName: '', emailAddress:'', password: ''};\n\n  signupComplete : boolean = false;\n\n  constructor(private showLoginService: ShowLoginService, private showLogout: ShowLogoutService, private router: Router,\n  private userInfo: UserInfoService, private signUp: SignUpServiceService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      userFirstName: ['', Validators.required],\n      userName: ['', Validators.required],\n      emailAddress: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      password2: ['', RxwebValidators.compare({fieldName: 'password'})]\n    });\n\n    this.signUp.getNameTaken().subscribe(res => this.nameTaken = res);\n  }\n\n  checkPasswords (group: FormGroup){\n    let password = this.f.password.value;\n    let password2 = this.f.password2.value;\n\n    if (password == password2){\n      return this.passwordNotSame = false;\n    } \n\n  }\n\n  get f(){ return this.registerForm.controls}\n\n  signup(){\n    this.submitted=true;\n    let response: string = null;\n\n    this.newUserTemplate = { \n      userFirstName: this.f.userFirstName.value, \n      userName: this.f.userName.value, \n      emailAddress: this.f.emailAddress.value, \n      password: this.f.password.value\n    };\n\n    if (this.registerForm.invalid){\n      return\n    }\n\n     response =this.signUp.attemptSignUP(this.newUserTemplate, (res)=>{\n    });\n\n  }\n\n  saveName(userName :string){\n    this.userInfo.setUserName(userName);\n    this.signUpCompleted();\n  }\n\n  signUpCompleted(){\n    this.signupComplete = true;\n    console.log(\"signup button pressed\");\n    this.showLoginService.changeShowStatus(false);\n    this.showLogout.changeShowStatus(true);\n    this.router.navigate(['/signUpComplete']);\n  }\n\n  ngOnDestroy(){\n    if (this.signupComplete === false){\n      this.showLoginService.changeShowStatus(true);\n    } else{\n\n    }\n\n  }\n\n}","import { Injectable } from '@angular/core';\nimport {Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserInfoService {\n  private userNameStorage : string;\n  private userName = new Subject<string>();\n\n  constructor() { \n\n  }\n\n  getUserNameNoSub(){\n    return this.userNameStorage;\n  }\n\n  getUserNameSub(){\n    console.log('name get ' + this.userName);\n    return this.userName.asObservable();\n  }\n\n  setUserName( userName : string){\n    this.userName.next(userName);\n    this.userNameStorage = userName;\n  }\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}